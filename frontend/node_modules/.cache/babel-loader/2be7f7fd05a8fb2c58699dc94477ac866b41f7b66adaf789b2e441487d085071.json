{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack web dev.course\\\\React\\\\voting-joke-game\\\\frontend\\\\src\\\\components\\\\Votes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Votes({\n  jokeId,\n  host\n}) {\n  _s();\n  const [votes, setVotes] = useState([]);\n  const [availableVotes, setAvailableVotes] = useState([]);\n  useEffect(() => {\n    fetch(`${host}/api/joke/${jokeId}`).then(response => response.json()).then(data => {\n      setVotes(data.votes || []);\n      setAvailableVotes(data.availableVotes || []);\n    }).catch(error => console.error(\"Error fetching votes:\", error));\n  }, [jokeId]);\n  const handleVote = emoji => {\n    fetch(`${host}/api/joke/${jokeId}/vote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        selectedEmoji: emoji\n      })\n    }).then(response => response.json()).then(updatedJoke => setVotes(updatedJoke.votes)).catch(error => console.error(\"Error voting:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: availableVotes.map(emoji => {\n      const vote = votes.find(v => v.label === emoji) || {\n        value: 0,\n        label: emoji\n      };\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleVote(emoji),\n        children: [emoji, \" \", vote.value]\n      }, emoji, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Votes, \"j6y69rwdbipOKYWaA6QDlug+qU0=\");\n_c = Votes;\nexport default Votes;\nvar _c;\n$RefreshReg$(_c, \"Votes\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Votes","jokeId","host","_s","votes","setVotes","availableVotes","setAvailableVotes","fetch","then","response","json","data","catch","error","console","handleVote","emoji","method","headers","body","JSON","stringify","selectedEmoji","updatedJoke","children","map","vote","find","v","label","value","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Fullstack web dev.course/React/voting-joke-game/frontend/src/components/Votes.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Votes({ jokeId, host }) {\r\n    const [votes, setVotes] = useState([]);\r\n    const [availableVotes, setAvailableVotes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(`${host}/api/joke/${jokeId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setVotes(data.votes || []);\r\n                setAvailableVotes(data.availableVotes || []);\r\n            })\r\n            .catch(error => console.error(\"Error fetching votes:\", error));\r\n    }, [jokeId]);\r\n\r\n    const handleVote = (emoji) => {\r\n        fetch(`${host}/api/joke/${jokeId}/vote`, {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ selectedEmoji: emoji })\r\n        })\r\n        .then(response => response.json())\r\n        .then(updatedJoke => setVotes(updatedJoke.votes))\r\n        .catch(error => console.error(\"Error voting:\", error));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {availableVotes.map((emoji) => {\r\n                const vote = votes.find(v => v.label === emoji) || { value: 0, label: emoji };\r\n                return (\r\n                    <button key={emoji} onClick={() => handleVote(emoji)}>\r\n                        {emoji} {vote.value}\r\n                    </button>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Votes;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,GAAGN,IAAI,aAAaD,MAAM,EAAE,CAAC,CAC9BQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVP,QAAQ,CAACO,IAAI,CAACR,KAAK,IAAI,EAAE,CAAC;MAC1BG,iBAAiB,CAACK,IAAI,CAACN,cAAc,IAAI,EAAE,CAAC;IAChD,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,MAAMe,UAAU,GAAIC,KAAK,IAAK;IAC1BT,KAAK,CAAC,GAAGN,IAAI,aAAaD,MAAM,OAAO,EAAE;MACrCiB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,aAAa,EAAEN;MAAM,CAAC;IACjD,CAAC,CAAC,CACDR,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACe,WAAW,IAAInB,QAAQ,CAACmB,WAAW,CAACpB,KAAK,CAAC,CAAC,CAChDS,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC,CAAC;EAC1D,CAAC;EAED,oBACIf,OAAA;IAAA0B,QAAA,EACKnB,cAAc,CAACoB,GAAG,CAAET,KAAK,IAAK;MAC3B,MAAMU,IAAI,GAAGvB,KAAK,CAACwB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,KAAKb,KAAK,CAAC,IAAI;QAAEc,KAAK,EAAE,CAAC;QAAED,KAAK,EAAEb;MAAM,CAAC;MAC7E,oBACIlB,OAAA;QAAoBiC,OAAO,EAAEA,CAAA,KAAMhB,UAAU,CAACC,KAAK,CAAE;QAAAQ,QAAA,GAChDR,KAAK,EAAC,GAAC,EAACU,IAAI,CAACI,KAAK;MAAA,GADVd,KAAK;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CAAC;IAEjB,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACjC,EAAA,CArCQH,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAuCd,eAAeA,KAAK;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack web dev.course\\\\React\\\\voting-joke-game\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Joke from './components/Joke';\nimport Votes from './components/Votes';\nimport NextJoke from './components/NextJoke';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [joke, setJoke] = useState(null);\n  const [shownJokes, setShownJokes] = useState(new Set());\n  const fetchJoke = (id = null) => {\n    const url = id ? `http://localhost:5000/api/joke/${id}` : \"http://localhost:5000/api/joke\";\n    let retryCount = fetch(url).then(response => response.json()).then(data => {\n      if (shownJokes.has(data._id)) {\n        console.log(\"Duplicate joke detected, refetching...\");\n        if (retryCount < 5) {\n          fetchJoke(null, retryCount + 1);\n        } else {\n          console.warn(\"Too many retries, showing duplicate joke.\");\n          setJoke(data);\n        }\n      } else {\n        setJoke(data);\n        setShownJokes(prev => new Set(prev).add(data._id));\n      }\n    }).catch(error => console.error(\"Error fetching joke:\", error));\n  };\n  useEffect(() => {\n    fetchJoke();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: joke && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Joke, {\n        joke: joke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Votes, {\n        jokeId: joke._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NextJoke, {\n        fetchJoke: fetchJoke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dtZqMBit2Fzp55ZJs9OvcTXHKb0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Joke","Votes","NextJoke","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","joke","setJoke","shownJokes","setShownJokes","Set","fetchJoke","id","url","retryCount","fetch","then","response","json","data","has","_id","console","log","warn","prev","add","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","jokeId","_c","$RefreshReg$"],"sources":["D:/Fullstack web dev.course/React/voting-joke-game/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Joke from './components/Joke';\nimport Votes from './components/Votes';\nimport NextJoke from './components/NextJoke';\n\nfunction App() {\n    const [joke, setJoke] = useState(null);\n    const [shownJokes, setShownJokes] = useState(new Set());\n\n    const fetchJoke = (id = null) => {\n        const url = id ? `http://localhost:5000/api/joke/${id}` : \"http://localhost:5000/api/joke\";\n        let retryCount = \n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                if (shownJokes.has(data._id)) {\n                    console.log(\"Duplicate joke detected, refetching...\");\n                    if (retryCount < 5) {\n                        fetchJoke(null, retryCount + 1);\n                    } else {\n                        console.warn(\"Too many retries, showing duplicate joke.\");\n                        setJoke(data);\n                    }\n                } else {\n                    setJoke(data);\n                    setShownJokes(prev => new Set(prev).add(data._id));\n                }\n            })\n            .catch(error => console.error(\"Error fetching joke:\", error));\n    };\n\n    useEffect(() => {\n        fetchJoke();\n    }, []);\n\n    return (\n        <div>\n            {joke && (\n                <>\n                    <Joke joke={joke} />\n                    <Votes jokeId={joke._id} />\n                    <NextJoke fetchJoke={fetchJoke} />\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAIe,GAAG,CAAC,CAAC,CAAC;EAEvD,MAAMC,SAAS,GAAGA,CAACC,EAAE,GAAG,IAAI,KAAK;IAC7B,MAAMC,GAAG,GAAGD,EAAE,GAAG,kCAAkCA,EAAE,EAAE,GAAG,gCAAgC;IAC1F,IAAIE,UAAU,GACdC,KAAK,CAACF,GAAG,CAAC,CACLG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,IAAIX,UAAU,CAACY,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,EAAE;QAC1BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrD,IAAIT,UAAU,GAAG,CAAC,EAAE;UAChBH,SAAS,CAAC,IAAI,EAAEG,UAAU,GAAG,CAAC,CAAC;QACnC,CAAC,MAAM;UACHQ,OAAO,CAACE,IAAI,CAAC,2CAA2C,CAAC;UACzDjB,OAAO,CAACY,IAAI,CAAC;QACjB;MACJ,CAAC,MAAM;QACHZ,OAAO,CAACY,IAAI,CAAC;QACbV,aAAa,CAACgB,IAAI,IAAI,IAAIf,GAAG,CAACe,IAAI,CAAC,CAACC,GAAG,CAACP,IAAI,CAACE,GAAG,CAAC,CAAC;MACtD;IACJ,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAIN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACZe,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA;IAAA4B,QAAA,EACKvB,IAAI,iBACDL,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACI5B,OAAA,CAACJ,IAAI;QAACS,IAAI,EAAEA;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBhC,OAAA,CAACH,KAAK;QAACoC,MAAM,EAAE5B,IAAI,CAACe;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3BhC,OAAA,CAACF,QAAQ;QAACY,SAAS,EAAEA;MAAU;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACpC;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC5B,EAAA,CAzCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fullstack web dev.course\\\\React\\\\voting-joke-game\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Joke from './components/Joke';\nimport Votes from './components/Votes';\nimport NextJoke from './components/NextJoke';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const host = process.env.REACT_APP_API_URL;\n  const [joke, setJoke] = useState(null);\n  const [shownJokes, setShownJokes] = useState(new Set());\n  const fetchJoke = (retryCount = 0) => {\n    fetch(`${host}/api/joke`).then(response => response.json()).then(data => {\n      console.log(\"New joke received:\", data);\n      if (shownJokes.has(data._id)) {\n        console.warn(`Duplicate joke detected (attempt ${retryCount + 1}), retrying...`);\n        if (retryCount < 5) {\n          setTimeout(() => fetchJoke(retryCount + 1), 500);\n        } else {\n          console.warn(\"Too many retries, showing duplicate joke.\");\n          setJoke(data);\n        }\n      } else {\n        setJoke(data);\n        setShownJokes(prev => new Set([...prev, data._id]));\n      }\n    }).catch(error => console.error(\"Error fetching joke:\", error));\n  };\n  useEffect(() => {\n    fetchJoke();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: joke && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Joke, {\n        joke: joke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Votes, {\n        jokeId: joke._id,\n        host: host\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(NextJoke, {\n        fetchJoke: fetchJoke\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"dtZqMBit2Fzp55ZJs9OvcTXHKb0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Joke","Votes","NextJoke","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","host","process","env","REACT_APP_API_URL","joke","setJoke","shownJokes","setShownJokes","Set","fetchJoke","retryCount","fetch","then","response","json","data","console","log","has","_id","warn","setTimeout","prev","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","jokeId","_c","$RefreshReg$"],"sources":["D:/Fullstack web dev.course/React/voting-joke-game/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Joke from './components/Joke';\nimport Votes from './components/Votes';\nimport NextJoke from './components/NextJoke';\n\nfunction App() {\n    const host = process.env.REACT_APP_API_URL;\n    const [joke, setJoke] = useState(null);\n    const [shownJokes, setShownJokes] = useState(new Set());\n\n    const fetchJoke = (retryCount = 0) => {\n        fetch(`${host}/api/joke`)\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"New joke received:\", data);\n\n                if (shownJokes.has(data._id)) {\n                    console.warn(`Duplicate joke detected (attempt ${retryCount + 1}), retrying...`);\n\n                    if (retryCount < 5) {\n                        setTimeout(() => fetchJoke(retryCount + 1), 500);\n                    } else {\n                        console.warn(\"Too many retries, showing duplicate joke.\");\n                        setJoke(data);\n                    }\n                } else {\n                    setJoke(data);\n                    setShownJokes(prev => new Set([...prev, data._id]));\n                }\n            })\n            .catch(error => console.error(\"Error fetching joke:\", error));\n    };\n\n    useEffect(() => {\n        fetchJoke();\n    }, []);\n\n    return (\n        <div>\n            {joke && (\n                <>\n                    <Joke joke={joke} />\n                    <Votes jokeId={joke._id} host={host}/>\n                    <NextJoke fetchJoke={fetchJoke} />\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,IAAImB,GAAG,CAAC,CAAC,CAAC;EAEvD,MAAMC,SAAS,GAAGA,CAACC,UAAU,GAAG,CAAC,KAAK;IAClCC,KAAK,CAAC,GAAGX,IAAI,WAAW,CAAC,CACpBY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,IAAI,CAAC;MAEvC,IAAIT,UAAU,CAACY,GAAG,CAACH,IAAI,CAACI,GAAG,CAAC,EAAE;QAC1BH,OAAO,CAACI,IAAI,CAAC,oCAAoCV,UAAU,GAAG,CAAC,gBAAgB,CAAC;QAEhF,IAAIA,UAAU,GAAG,CAAC,EAAE;UAChBW,UAAU,CAAC,MAAMZ,SAAS,CAACC,UAAU,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;QACpD,CAAC,MAAM;UACHM,OAAO,CAACI,IAAI,CAAC,2CAA2C,CAAC;UACzDf,OAAO,CAACU,IAAI,CAAC;QACjB;MACJ,CAAC,MAAM;QACHV,OAAO,CAACU,IAAI,CAAC;QACbR,aAAa,CAACe,IAAI,IAAI,IAAId,GAAG,CAAC,CAAC,GAAGc,IAAI,EAAEP,IAAI,CAACI,GAAG,CAAC,CAAC,CAAC;MACvD;IACJ,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAIR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACZmB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA;IAAA8B,QAAA,EACKrB,IAAI,iBACDT,OAAA,CAAAE,SAAA;MAAA4B,QAAA,gBACI9B,OAAA,CAACJ,IAAI;QAACa,IAAI,EAAEA;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpBlC,OAAA,CAACH,KAAK;QAACsC,MAAM,EAAE1B,IAAI,CAACe,GAAI;QAACnB,IAAI,EAAEA;MAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtClC,OAAA,CAACF,QAAQ;QAACgB,SAAS,EAAEA;MAAU;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACpC;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC9B,EAAA,CA3CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}